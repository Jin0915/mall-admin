{"remainingRequest":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/babel-loader/lib/index.js!/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/src/views/Auth/Role.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/src/views/Auth/Role.vue","mtime":1573870081728},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/mac/Desktop/\\u4E0A\\u8BFE\\u6559\\u6750\\u8D44\\u6E90/vue\\u5546\\u57CE\\u9879\\u76EE/mall-admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mac/Desktop/\\u4E0A\\u8BFE\\u6559\\u6750\\u8D44\\u6E90/vue\\u5546\\u57CE\\u9879\\u76EE/mall-admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Role } from \"@/api/index\";\nexport default {\n  name: \"Role\",\n  data: function data() {\n    return {\n      tableData: [],\n      AddModalVisible: false,\n      addForm: {\n        name: \"\"\n      },\n      EditModalVisible: false,\n      editForm: {\n        id: \"\",\n        name: \"\"\n      }\n    };\n  },\n  created: function created() {\n    this.loadRole();\n  },\n  methods: {\n    loadRole: function () {\n      var _loadRole = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, status, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Role.list();\n\n              case 2:\n                _ref = _context.sent;\n                status = _ref.status;\n                data = _ref.data;\n\n                if (status) {\n                  this.tableData = data;\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadRole() {\n        return _loadRole.apply(this, arguments);\n      }\n\n      return loadRole;\n    }(),\n    //添加角色\n    addRoleHandle: function () {\n      var _addRoleHandle = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref2, status;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Role.add(_objectSpread({}, this.addForm));\n\n              case 2:\n                _ref2 = _context2.sent;\n                status = _ref2.status;\n\n                if (status) {\n                  this.loadRole();\n                  this.AddModalVisible = false;\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addRoleHandle() {\n        return _addRoleHandle.apply(this, arguments);\n      }\n\n      return addRoleHandle;\n    }(),\n    //打开编辑Modal\n    openEditModal: function openEditModal(data) {\n      this.EditModalVisible = true;\n      this.editForm = _objectSpread({}, data);\n    },\n    //编辑角色\n    updateRoleHandle: function () {\n      var _updateRoleHandle = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _ref3, status;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Role.update(_objectSpread({}, this.editForm));\n\n              case 2:\n                _ref3 = _context3.sent;\n                status = _ref3.status;\n\n                if (status) {\n                  this.loadRole();\n                  this.EditModalVisible = false;\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateRoleHandle() {\n        return _updateRoleHandle.apply(this, arguments);\n      }\n\n      return updateRoleHandle;\n    }(),\n    // 确认删除\n    openDeleteModal: function openDeleteModal(id) {\n      var _this = this;\n\n      this.$confirm('此操作将永久删除该角色及其关联账户, 是否继续？', {\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var _ref5, status;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Role.remove({\n                  id: id\n                });\n\n              case 2:\n                _ref5 = _context4.sent;\n                status = _ref5.status;\n\n                if (status) {\n                  _this.loadRole();\n\n                  _this.$message.success('删除成功!');\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))).catch(function () {\n        _this.$message.info('已取消删除');\n      });\n    }\n  }\n};",{"version":3,"sources":["Role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,SAAA,IAAA,QAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAHA;AAMA,MAAA,gBAAA,EAAA,KANA;AAOA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA;AAFA;AAPA,KAAA;AAYA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,QAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,IAAA,CAAA,IAAA,EAFA;;AAAA;AAAA;AAEA,gBAAA,MAFA,QAEA,MAFA;AAEA,gBAAA,IAFA,QAEA,IAFA;;AAGA,oBAAA,MAAA,EAAA;AACA,uBAAA,SAAA,GAAA,IAAA;AACA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOA;AACA,IAAA,aARA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBASA,IAAA,CAAA,GAAA,mBAAA,KAAA,OAAA,EATA;;AAAA;AAAA;AASA,gBAAA,MATA,SASA,MATA;;AAUA,oBAAA,MAAA,EAAA;AACA,uBAAA,QAAA;AACA,uBAAA,eAAA,GAAA,KAAA;AACA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeA;AACA,IAAA,aAhBA,yBAgBA,IAhBA,EAgBA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,WAAA,QAAA,qBAAA,IAAA;AACA,KAnBA;AAoBA;AACA,IAAA,gBArBA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsBA,IAAA,CAAA,MAAA,mBAAA,KAAA,QAAA,EAtBA;;AAAA;AAAA;AAsBA,gBAAA,MAtBA,SAsBA,MAtBA;;AAuBA,oBAAA,MAAA,EAAA;AACA,uBAAA,QAAA;AACA,uBAAA,gBAAA,GAAA,KAAA;AACA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4BA;AACA,IAAA,eA7BA,2BA6BA,EA7BA,EA6BA;AAAA;;AACA,WAAA,QAAA,CAAA,0BAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,EAGA,IAHA;AAAA;AAAA;AAAA;AAAA,8BAGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,IAAA,CAAA,MAAA,CAAA;AAAA,kBAAA,EAAA,EAAA;AAAA,iBAAA,CADA;;AAAA;AAAA;AACA,gBAAA,MADA,SACA,MADA;;AAEA,oBAAA,MAAA,EAAA;AACA,kBAAA,KAAA,CAAA,QAAA;;AACA,kBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA;AACA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHA,IAUA,KAVA,CAUA,YAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,OAZA;AAaA;AA3CA;AAnBA,CAAA","sourcesContent":["<template>\n\t<div>\n\t\t<el-row :gutter=\"10\">\n\t\t\t<el-col :span=\"10\">\n\t\t\t\t<el-card class=\"role-card\">\n\t\t\t\t\t<div slot=\"header\" class=\"header\">\n\t\t\t\t\t\t<span>角色列表</span>\n\t\t\t\t\t\t<el-button plain type=\"primary\" @click=\"AddModalVisible = true\" icon=\"el-icon-circle-plus-outline\">添加角色\n\t\t\t\t\t\t</el-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<el-table :data=\"tableData\" style=\"width: 100%\">\n\t\t\t\t\t\t<el-table-column prop=\"id\" label=\"#\">\n\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t<el-table-column label=\"角色\">\n\t\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t<el-tag :type=\"scope.row.id===1?'danger':''\">{{scope.row.name}}</el-tag>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t<el-table-column width=\"180\" label=\"操作\">\n\t\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t<el-button :disabled=\"scope.row.id===1\" type=\"primary\" plain @click=\"openEditModal(scope.row)\" icon=\"el-icon-edit\"></el-button>\n\t\t\t\t\t\t\t\t<el-button :disabled=\"scope.row.id===1\" type=\"danger\" plain @click=\"openDeleteModal(scope.row.id)\" icon=\"el-icon-delete\"></el-button>\n\t\t\t\t\t\t\t\t<router-link class=\"am-margin-left-sm\" :to=\"{ name: 'RoleConfig', params: { id: scope.row.id }}\">\n\t\t\t\t\t\t\t\t\t<el-button type=\"primary\" plain icon=\"el-icon-setting\"></el-button>\n\t\t\t\t\t\t\t\t</router-link>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t</el-table>\n\t\t\t\t</el-card>\n\t\t\t</el-col>\n\t\t\t<el-col :span=\"14\">\n\t\t\t\t<router-view></router-view>\n\t\t\t</el-col>\n\t\t</el-row>\n\t\t<!-- 添加Modal -->\n\t\t<el-dialog title=\"添加角色\" :visible.sync=\"AddModalVisible\">\n\t\t\t<el-form label-width=\"80px\" :label-position=\"'left'\">\n\t\t\t\t<el-form-item label=\"名称\">\n\t\t\t\t\t<el-input v-model=\"addForm.name\"></el-input>\n\t\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t<el-button @click=\"AddModalVisible = false\">取 消</el-button>\n\t\t\t\t<el-button type=\"primary\" @click=\"addRoleHandle\">确 定</el-button>\n\t\t\t</div>\n\t\t</el-dialog>\n\t\t<!-- 编辑Modal -->\n\t\t<el-dialog title=\"编辑角色\" :visible.sync=\"EditModalVisible\">\n\t\t\t<el-form label-width=\"80px\" :label-position=\"'left'\">\n\t\t\t\t<el-form-item label=\"名称\">\n\t\t\t\t\t<el-input v-model=\"editForm.name\"></el-input>\n\t\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t<el-button @click=\"EditModalVisible = false\">取 消</el-button>\n\t\t\t\t<el-button type=\"primary\" @click=\"updateRoleHandle\">确 定</el-button>\n\t\t\t</div>\n\t\t</el-dialog>\n\t</div>\n\n</template>\n\n<script>\n\timport { Role } from \"@/api/index\";\n\n\texport default {\n\t\tname: \"Role\",\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\ttableData: [],\n\t\t\t\tAddModalVisible: false,\n\t\t\t\taddForm: {\n\t\t\t\t\tname: \"\",\n\t\t\t\t},\n\t\t\t\tEditModalVisible: false,\n\t\t\t\teditForm: {\n\t\t\t\t\tid: \"\",\n\t\t\t\t\tname: \"\",\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tthis.loadRole();\n\t\t},\n\t\tmethods: {\n\t\t\tasync loadRole() {\n\t\t\t\tlet { status, data } = await Role.list();\n\t\t\t\tif (status) {\n\t\t\t\t\tthis.tableData = data;\n\t\t\t\t}\n\t\t\t},\n\t\t\t//添加角色\n\t\t\tasync addRoleHandle() {\n\t\t\t\tlet { status } = await Role.add({ ...this.addForm });\n\t\t\t\tif (status) {\n\t\t\t\t\tthis.loadRole();\n\t\t\t\t\tthis.AddModalVisible = false;\n\t\t\t\t}\n\t\t\t},\n\t\t\t//打开编辑Modal\n\t\t\topenEditModal(data) {\n\t\t\t\tthis.EditModalVisible = true;\n\t\t\t\tthis.editForm = { ...data };\n\t\t\t},\n\t\t\t//编辑角色\n\t\t\tasync updateRoleHandle() {\n\t\t\t\tlet { status } = await Role.update({ ...this.editForm });\n\t\t\t\tif (status) {\n\t\t\t\t\tthis.loadRole();\n\t\t\t\t\tthis.EditModalVisible = false;\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 确认删除\n\t\t\topenDeleteModal(id) {\n\t\t\t\tthis.$confirm('此操作将永久删除该角色及其关联账户, 是否继续？', {\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t})\n\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\tlet { status } = await Role.remove({ id });\n\t\t\t\t\t\tif (status) {\n\t\t\t\t\t\t\tthis.loadRole();\n\t\t\t\t\t\t\tthis.$message.success('删除成功!');\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tthis.$message.info('已取消删除');\n\t\t\t\t\t});\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.role-card {\n\t\t.header {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t}\n\t}\n</style>\n"],"sourceRoot":"src/views/Auth"}]}