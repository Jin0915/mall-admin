{"remainingRequest":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/babel-loader/lib/index.js!/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/src/router.js","dependencies":[{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/src/router.js","mtime":1573870081726},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// 0. 如果使用模块化机制编程，导入Vue和VueRouter，要调用 Vue.use(Router)\nimport Vue from 'vue';\nimport Router from 'vue-router';\nVue.use(Router); // 1. import 进来views文件夹下的页面级组件。\n// 用户组\n\nimport UserLogin from '@/views/User/Login.vue';\nimport UserRegister from '@/views/User/Register.vue';\nimport UserList from '@/views/User/List.vue';\nimport UserInfo from '@/views/User/Info.vue'; // 订单\n\nimport OrderList from '@/views/Order/List.vue'; // 管理员\n\nimport Index from '@/views/Index.vue'; // 商品\n\nimport GoodsCategory from '@/views/Goods/Category.vue';\nimport GoodsList from \"@/views/Goods/List\";\nimport GoodsRelease from \"@/views/Goods/Release\";\nimport GoodsEdit from \"@/views/Goods/Edit\"; //权限\n\nimport AuthRole from \"@/views/Auth/Role\";\nimport AuthMenu from \"@/views/Auth/Menu\";\nimport RoleConfig from \"@/views/Auth/Role-Config\";\n/**\n * 2. 定义路由\n * 每个路由应该映射一个组件。\n * 其中\"component\" 可以是通过 Vue.extend() 创建的组件构造器，\n * 或者，只是一个组件配置对象。\n */\n\nvar routes = [{\n  path: '/register',\n  name: 'UserRegister',\n  component: UserRegister\n}, {\n  path: '/login',\n  name: 'UserLogin',\n  component: UserLogin,\n  props: function props(route) {\n    return route.query;\n  },\n  alias: \"/\"\n}, {\n  path: '/goods',\n  name: 'Goods',\n  component: Index,\n  redirect: '/goods/list',\n  meta: {\n    requiredAuth: true\n  },\n  children: [{\n    path: 'category',\n    name: 'GoodsCategory',\n    component: GoodsCategory,\n    meta: {\n      requiredAuth: true\n    }\n  }, {\n    path: \"list\",\n    name: \"GoodsList\",\n    component: GoodsList,\n    meta: {\n      requiredAuth: true\n    }\n  }, {\n    path: \"release\",\n    name: \"GoodsRelease\",\n    component: GoodsRelease,\n    meta: {\n      requiredAuth: true\n    }\n  }, {\n    path: \"edit/:id\",\n    name: \"GoodsEdit\",\n    component: GoodsEdit,\n    props: true,\n    meta: {\n      requiredAuth: true\n    }\n  }]\n}, {\n  path: '/user',\n  name: 'User',\n  component: Index,\n  meta: {\n    requiredAuth: true\n  },\n  children: [{\n    path: \"list\",\n    name: \"UserList\",\n    component: UserList,\n    meta: {\n      requiredAuth: true\n    }\n  }, {\n    path: \"info\",\n    name: \"UserInfo\",\n    component: UserInfo,\n    meta: {\n      requiredAuth: true\n    }\n  }]\n}, {\n  path: '/auth',\n  name: 'Auth',\n  component: Index,\n  meta: {\n    requiredAuth: true\n  },\n  children: [{\n    path: \"menu\",\n    name: \"AuthMenu\",\n    component: AuthMenu,\n    meta: {\n      requiredAuth: true\n    }\n  }, {\n    path: \"role\",\n    name: \"AuthRole\",\n    component: AuthRole,\n    meta: {\n      requiredAuth: true\n    },\n    children: [{\n      path: \"config/:id\",\n      name: \"RoleConfig\",\n      component: RoleConfig,\n      props: true,\n      meta: {\n        requiredAuth: true\n      }\n    }]\n  }]\n}, {\n  path: '/order',\n  name: 'Index',\n  component: Index,\n  meta: {\n    requiredAuth: true\n  },\n  children: [{\n    path: \"list\",\n    name: \"OrderList\",\n    component: OrderList,\n    meta: {\n      requiredAuth: true\n    }\n  }]\n}]; // 3. 创建 router 实例，然后传 `routes` 配置。\n\nvar router = new Router({\n  routes: routes // (缩写) 相当于 routes: routes\n\n}); // 4.全局路由守卫\n\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiredAuth;\n  })) {\n    // 无token,未登录\n    if (!sessionStorage.token) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      return;\n    } // 已登录\n\n\n    next();\n  } else {\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/src/router.js"],"names":["Vue","Router","use","UserLogin","UserRegister","UserList","UserInfo","OrderList","Index","GoodsCategory","GoodsList","GoodsRelease","GoodsEdit","AuthRole","AuthMenu","RoleConfig","routes","path","name","component","props","route","query","alias","redirect","meta","requiredAuth","children","router","beforeEach","to","from","next","matched","some","record","sessionStorage","token","fullPath"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,MAAR,E,CACA;AACA;;AACA,OAAOE,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA;;;;;;;AAMA,IAAMC,MAAM,GAAG,CACX;AACIC,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,IAAI,EAAE,cAFV;AAGIC,EAAAA,SAAS,EAAEf;AAHf,CADW,EAMX;AACIa,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,IAAI,EAAE,WAFV;AAGIC,EAAAA,SAAS,EAAEhB,SAHf;AAIIiB,EAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,WAAWA,KAAK,CAACC,KAAjB;AAAA,GAJX;AAKIC,EAAAA,KAAK,EAAE;AALX,CANW,EAaX;AACIN,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,SAAS,EAAEX,KAHf;AAIIgB,EAAAA,QAAQ,EAAE,aAJd;AAKIC,EAAAA,IAAI,EAAE;AACFC,IAAAA,YAAY,EAAE;AADZ,GALV;AAQIC,EAAAA,QAAQ,EAAE,CACN;AACIV,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,SAAS,EAAEV,aAHf;AAIIgB,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJV,GADM,EASN;AACIT,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,SAAS,EAAET,SAHf;AAIIe,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJV,GATM,EAiBN;AACIT,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,SAAS,EAAER,YAHf;AAIIc,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJV,GAjBM,EAyBN;AACIT,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,SAAS,EAAEP,SAHf;AAIIQ,IAAAA,KAAK,EAAE,IAJX;AAKIK,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AALV,GAzBM;AARd,CAbW,EAwDX;AACIT,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIC,EAAAA,SAAS,EAAEX,KAHf;AAIIiB,EAAAA,IAAI,EAAE;AACFC,IAAAA,YAAY,EAAE;AADZ,GAJV;AAOIC,EAAAA,QAAQ,EAAE,CACN;AACIV,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,SAAS,EAAEd,QAHf;AAIIoB,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJV,GADM,EAQH;AACCT,IAAAA,IAAI,EAAE,MADP;AAECC,IAAAA,IAAI,EAAE,UAFP;AAGCC,IAAAA,SAAS,EAAEb,QAHZ;AAICmB,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJP,GARG;AAPd,CAxDW,EAiFX;AACIT,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIC,EAAAA,SAAS,EAAEX,KAHf;AAIIiB,EAAAA,IAAI,EAAE;AACFC,IAAAA,YAAY,EAAE;AADZ,GAJV;AAOIC,EAAAA,QAAQ,EAAE,CACN;AACIV,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,SAAS,EAAEL,QAHf;AAIIW,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJV,GADM,EASN;AACIT,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,SAAS,EAAEN,QAHf;AAIIY,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ,KAJV;AAOIC,IAAAA,QAAQ,EAAE,CAAC;AACPV,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,IAAI,EAAE,YAFC;AAGPC,MAAAA,SAAS,EAAEJ,UAHJ;AAIPK,MAAAA,KAAK,EAAE,IAJA;AAKPK,MAAAA,IAAI,EAAE;AACFC,QAAAA,YAAY,EAAE;AADZ;AALC,KAAD;AAPd,GATM;AAPd,CAjFW,EAmHX;AACIT,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,SAAS,EAAEX,KAHf;AAIIiB,EAAAA,IAAI,EAAE;AACFC,IAAAA,YAAY,EAAE;AADZ,GAJV;AAOIC,EAAAA,QAAQ,EAAE,CAAC;AACPV,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,IAAI,EAAE,WAFC;AAGPC,IAAAA,SAAS,EAAEZ,SAHJ;AAIPkB,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ;AAJC,GAAD;AAPd,CAnHW,CAAf,C,CAqIA;;AACA,IAAME,MAAM,GAAG,IAAI3B,MAAJ,CAAW;AACtBe,EAAAA,MAAM,EAANA,MADsB,CACf;;AADe,CAAX,CAAf,C,CAGA;;AACAY,MAAM,CAACC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAClC,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACV,IAAP,CAAYC,YAAhB;AAAA,GAAtB,CAAJ,EAAyD;AACrD;AACA,QAAI,CAACU,cAAc,CAACC,KAApB,EAA2B;AACvBL,MAAAA,IAAI,CAAC;AACDf,QAAAA,IAAI,EAAE,QADL;AAEDK,QAAAA,KAAK,EAAE;AACHE,UAAAA,QAAQ,EAAEM,EAAE,CAACQ;AADV;AAFN,OAAD,CAAJ;AAMA;AACH,KAVoD,CAWrD;;;AACAN,IAAAA,IAAI;AACP,GAbD,MAaO;AACHA,IAAAA,IAAI;AACP;AACJ,CAjBD;AAmBA,eAAeJ,MAAf","sourcesContent":["// 0. 如果使用模块化机制编程，导入Vue和VueRouter，要调用 Vue.use(Router)\nimport Vue from 'vue'\nimport Router from 'vue-router'\n\nVue.use(Router)\n// 1. import 进来views文件夹下的页面级组件。\n// 用户组\nimport UserLogin from '@/views/User/Login.vue';\nimport UserRegister from '@/views/User/Register.vue';\nimport UserList from '@/views/User/List.vue';\nimport UserInfo from '@/views/User/Info.vue';\n// 订单\nimport OrderList from '@/views/Order/List.vue';\n// 管理员\nimport Index from '@/views/Index.vue';\n// 商品\nimport GoodsCategory from '@/views/Goods/Category.vue';\nimport GoodsList from \"@/views/Goods/List\";\nimport GoodsRelease from \"@/views/Goods/Release\";\nimport GoodsEdit from \"@/views/Goods/Edit\";\n//权限\nimport AuthRole from \"@/views/Auth/Role\";\nimport AuthMenu from \"@/views/Auth/Menu\";\nimport RoleConfig from \"@/views/Auth/Role-Config\";\n\n/**\n * 2. 定义路由\n * 每个路由应该映射一个组件。\n * 其中\"component\" 可以是通过 Vue.extend() 创建的组件构造器，\n * 或者，只是一个组件配置对象。\n */\nconst routes = [\n    {\n        path: '/register',\n        name: 'UserRegister',\n        component: UserRegister,\n    },\n    {\n        path: '/login',\n        name: 'UserLogin',\n        component: UserLogin,\n        props: (route) => route.query,\n        alias: \"/\",\n    },\n    {\n        path: '/goods',\n        name: 'Goods',\n        component: Index,\n        redirect: '/goods/list',\n        meta: {\n            requiredAuth: true\n        },\n        children: [\n            {\n                path: 'category',\n                name: 'GoodsCategory',\n                component: GoodsCategory,\n                meta: {\n                    requiredAuth: true\n                },\n            },\n            {\n                path: \"list\",\n                name: \"GoodsList\",\n                component: GoodsList,\n                meta: {\n                    requiredAuth: true\n                },\n            },\n            {\n                path: \"release\",\n                name: \"GoodsRelease\",\n                component: GoodsRelease,\n                meta: {\n                    requiredAuth: true\n                },\n            },\n            {\n                path: \"edit/:id\",\n                name: \"GoodsEdit\",\n                component: GoodsEdit,\n                props: true,\n                meta: {\n                    requiredAuth: true\n                },\n            }]\n    },\n    {\n        path: '/user',\n        name: 'User',\n        component: Index,\n        meta: {\n            requiredAuth: true\n        },\n        children: [\n            {\n                path: \"list\",\n                name: \"UserList\",\n                component: UserList,\n                meta: {\n                    requiredAuth: true\n                },\n            }, {\n                path: \"info\",\n                name: \"UserInfo\",\n                component: UserInfo,\n                meta: {\n                    requiredAuth: true\n                },\n            },\n        ]\n    },\n    {\n        path: '/auth',\n        name: 'Auth',\n        component: Index,\n        meta: {\n            requiredAuth: true\n        },\n        children: [\n            {\n                path: \"menu\",\n                name: \"AuthMenu\",\n                component: AuthMenu,\n                meta: {\n                    requiredAuth: true\n                },\n            },\n            {\n                path: \"role\",\n                name: \"AuthRole\",\n                component: AuthRole,\n                meta: {\n                    requiredAuth: true\n                },\n                children: [{\n                    path: \"config/:id\",\n                    name: \"RoleConfig\",\n                    component: RoleConfig,\n                    props: true,\n                    meta: {\n                        requiredAuth: true\n                    },\n                }]\n            }]\n    },\n    {\n        path: '/order',\n        name: 'Index',\n        component: Index,\n        meta: {\n            requiredAuth: true\n        },\n        children: [{\n            path: \"list\",\n            name: \"OrderList\",\n            component: OrderList,\n            meta: {\n                requiredAuth: true\n            },\n        }]\n    }\n];\n\n// 3. 创建 router 实例，然后传 `routes` 配置。\nconst router = new Router({\n    routes // (缩写) 相当于 routes: routes\n})\n// 4.全局路由守卫\nrouter.beforeEach((to, from, next) => {\n    if (to.matched.some(record => record.meta.requiredAuth)) {\n        // 无token,未登录\n        if (!sessionStorage.token) {\n            next({\n                path: '/login',\n                query: {\n                    redirect: to.fullPath\n                }\n            });\n            return;\n        }\n        // 已登录\n        next();\n    } else {\n        next();\n    }\n});\n\nexport default router"]}]}