{"remainingRequest":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/src/views/Auth/Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/src/views/Auth/Menu.vue","mtime":1573948834796},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/上课教材资源/vue商城项目/mall-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Menu, Icon } from \"@/api/index\";\n\nexport default {\n\tname: \"Menu\",\n\tdata() {\n\t\treturn {\n\t\t\tdefaultProps: {\n\t\t\t\tlabel: 'name'\n\t\t\t},\n\t\t\t// 选择图标\n\t\t\tIconModalVisible: false,\n\t\t\ticons: [],\n\t\t\tpageSize: 30,\n\t\t\ticonTotal: 0,\n\t\t\tcheckedIcon: '',\n\t\t\tcheckedIconName: '',\n\t\t\t// 编辑Modal\n\t\t\tEditModalVisible: false,\n\t\t\teditForm: {\n\t\t\t\tname: \"\",\n\t\t\t\tpId: '',\n\t\t\t\tpath: '',\n\t\t\t\torder: '',\n\t\t\t},\n\t\t\t// 添加Modal\n\t\t\tAddModalVisible: false,\n\t\t\taddForm: {\n\t\t\t\tname: \"\",\n\t\t\t\tpId: '',\n\t\t\t\tpath: '',\n\t\t\t\torder: '',\n\t\t\t},\n\t\t\tcurrentNodeData: '',\n\t\t\tcurrentNode: '',\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.loadIcons(1);\n\t},\n\tmethods: {\n\t\tasync loadNode(node, resolve) {\n\t\t\t// 根节点level==0\n\t\t\tif (node.level === 0) {\n\t\t\t\tlet { data } = await Menu.loadSub({ pId: 0 });\n\t\t\t\treturn resolve(data);\n\t\t\t}\n\t\t\tlet { data } = await Menu.loadSub({ pId: node.data.id });\n\t\t\tresolve(data);\n\t\t},\n\t\t// 加载element图标\n\t\tasync loadIcons(pageIndex) {\n\t\t\tlet { status, icons, total } = await Icon.list({ pageSize: this.pageSize, pageIndex });\n\t\t\tif (status) {\n\t\t\t\ticons.forEach((item) => {\n\t\t\t\t\t// 添加选择状态--布尔值\n\t\t\t\t\titem.checked = false;\n\t\t\t\t});\n\t\t\t\tthis.icons = icons;\n\t\t\t\tthis.iconTotal = total;\n\t\t\t}\n\t\t},\n\t\t// 打开图标选择Modal\n\t\topenIconModal(node, data) {\n\t\t\tthis.IconModalVisible = true;\n\t\t\t// 转存data\n\t\t\tthis.currentNodeData = data;\n\t\t},\n\t\t// 分页器改变页码数\n\t\tcurrentPageChange(pageIndex) {\n\t\t\tthis.loadIcons(pageIndex);\n\t\t},\n\t\t// 选中图标\n\t\tcheckIcon(data) {\n\t\t\tthis.icons.forEach((item) => {\n\t\t\t\t// 切换选中状态\n\t\t\t\titem.checked = item == data ? !data.checked : false;\n\t\t\t});\n\t\t\t// 存储/取消选中的iconName\n\t\t\tthis.checkedIcon = data.checked ? data.id : '';\n\t\t\tthis.checkedIconName = data.checked ? data.name : '';\n\t\t},\n\t\t// 更新图标\n\t\tasync UpdateIconHandle() {\n\t\t\tlet { status, msg } = await Menu.setIcon({ id: this.currentNodeData.id, icon: this.checkedIcon });\n\t\t\tif (status) {\n\t\t\t\tthis.$message.success(msg);\n\t\t\t\tthis.IconModalVisible = false;\n\t\t\t\t// 修改图标\n\t\t\t\tthis.currentNodeData.icon = this.checkedIconName;\n\t\t\t}\n\t\t},\n\t\t// 打开编辑Modal\n\t\topenEditModal(node, data) {\n\t\t\tthis.EditModalVisible = true;\n\t\t\tthis.editForm = { ...data };\n\t\t\t// 转存node节点\n\t\t\tthis.currentNode = node;\n\t\t},\n\t\t// 打开添加Modal获取pId\n\t\topenAddModal(node, data) {\n\t\t\tthis.addForm.pId = data.id;\n\t\t\tthis.AddModalVisible = true;\n\t\t\t// 转存data\n\t\t\tthis.currentNode = node;\n\t\t},\n\t\t// 删除节点\n\t\topenDeleteModal(node, data) {\n\t\t\tthis.$confirm('此操作将永久删除该菜单, 是否继续?', {\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t})\n\t\t\t\t.then(async () => {\n\t\t\t\t\tlet { status } = await Menu.remove({ id: data.id });\n\t\t\t\t\tif (status) {\n\t\t\t\t\t\tnode.remove();\n\t\t\t\t\t\tthis.$message.success('删除成功!');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$message.info('已取消删除');\n\t\t\t\t});\n\t\t},\n\t\t// 确认添加节点\n\t\tasync AddNodeHandle() {\n\t\t\tlet { status, msg, data } = await Menu.add({ ...this.addForm });\n\t\t\tif (!status) {\n\t\t\t\tthis.$message.error(msg);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.$message.success(msg);\n\t\t\tthis.AddModalVisible = false;\n\t\t\t// 树形结构添加子节点\n\t\t\tthis.$refs.tree.append({ ...this.addForm, ...data }, this.currentNode);\n\t\t\t//清空表单\n\t\t\tthis.addForm = { name: \"\", pId: '', path: '' };\n\t\t},\n\t\t// 更新节点\n\t\tasync UpdateNodeHandle() {\n\t\t\tlet { status, msg } = await Menu.update({ ...this.editForm });\n\t\t\tif (status) {\n\t\t\t\tthis.$message.success(msg);\n\t\t\t\tthis.EditModalVisible = false;\n\t\t\t\t// 更新节点\n\t\t\t\tthis.currentNode.data = { ...this.editForm }\n\t\t\t}\n\t\t},\n\t}\n}\n",{"version":3,"sources":["Menu.vue"],"names":[],"mappingsfile":"Menu.vue","sourceRoot":"src/views/Auth","sourcesContent":["<template>\n\t<div>\n\t\t<el-card class=\"box-card\">\n\t\t\t<div slot=\"header\" class=\"clearfix\">\n\t\t\t\t<span>菜单权限</span>\n\t\t\t</div>\n\t\t\t<el-alert title=\"Tips\" type=\"warning\" description=\"设置后台管理系统的左侧菜单，目前至多支持两层菜单，三层以上菜单将不会显示。\" show-icon :closable=\"false\">\n\t\t\t</el-alert>\n\t\t\t<!-- 树形组件 -->\n\t\t\t<el-tree class=\"am-margin-top-lg\" ref=\"tree\" :default-expanded-keys=\"[1]\" lazy node-key=\"id\" :load=\"loadNode\" :props=\"defaultProps\">\n\t\t\t\t<div class=\"node-box\" slot-scope=\"{ node, data }\">\n\t\t\t\t\t<div class=\"node-name\">\n\t\t\t\t\t\t{{ node.label }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"node-action\">\n\t\t\t\t\t\t<el-popover placement=\"left\" class=\"am-margin-right-sm\" trigger=\"hover\">\n\t\t\t\t\t\t\t<i v-if=\"data.icon\" class=\"am-text-xxl\" :class=\"`el-icon-${data.icon}`\"></i>\n\t\t\t\t\t\t\t<div v-else class=\"am-text-xxl\">无</div>\n\t\t\t\t\t\t\t<el-button slot=\"reference\" type=\"text\" :icon=\"data.icon?`el-icon-${data.icon}`:''\" :disabled=\"data.id==1\"\n\t\t\t\t\t\t\t @click.stop=\"openIconModal(node,data)\">图标\n\t\t\t\t\t\t\t</el-button>\n\t\t\t\t\t\t</el-popover>\n\t\t\t\t\t\t<el-button type=\"text\" icon=\"el-icon-edit-outline\" :disabled=\"data.id==1\" @click.stop=\"openEditModal(node,data)\">编辑\n\t\t\t\t\t\t</el-button>\n\t\t\t\t\t\t<el-button type=\"text\" icon=\"el-icon-plus\" @click.stop=\"openAddModal(node,data)\">添加\n\t\t\t\t\t\t</el-button>\n\t\t\t\t\t\t<el-button type=\"text\" icon=\"el-icon-delete\" :disabled=\"data.id==1\" @click.stop=\"openDeleteModal(node,data)\">删除\n\t\t\t\t\t\t</el-button>\n\t\t\t\t\t\t<div class=\"node-order am-margin-left-sm\">\n\t\t\t\t\t\t\t显示序号：<el-tag size=\"mini\">{{ data.order }}</el-tag>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</el-tree>\n\t\t\t<!-- 编辑Modal -->\n\t\t\t<el-dialog title=\"编辑节点\" :visible.sync=\"EditModalVisible\">\n\t\t\t\t<el-form label-width=\"80px\" :label-position=\"'left'\">\n\t\t\t\t\t<el-form-item label=\"菜单名称\">\n\t\t\t\t\t\t<el-input v-model=\"editForm.name\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"链接地址\">\n\t\t\t\t\t\t<el-input v-model=\"editForm.path\" placeholder=\"指定此菜单的链接地址，选填\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"显示顺序\">\n\t\t\t\t\t\t<el-input v-model=\"editForm.order\" placeholder=\"显示顺序按照数字从小到大，如2001\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t</el-form>\n\t\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t\t<el-button @click=\"EditModalVisible = false\">取 消</el-button>\n\t\t\t\t\t<el-button type=\"primary\" @click=\"UpdateNodeHandle\">确 定</el-button>\n\t\t\t\t</div>\n\t\t\t</el-dialog>\n\t\t\t<!-- 选择图标Modal -->\n\t\t\t<el-dialog title=\"选择图标\" width=\"72%\" :visible.sync=\"IconModalVisible\">\n\t\t\t\t<!-- 图标列表 -->\n\t\t\t\t<ul class=\"icon-list\">\n\t\t\t\t\t<li v-for=\"item in icons\" :key=\"item.id\" :class=\"{checked:item.checked}\" @click=\"checkIcon(item)\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<i :class=\"`el-icon-${item.name}`\"></i>\n\t\t\t\t\t\t\t<span class=\"icon-name\">el-icon-{{item.name}}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<!-- 分页器 -->\n\t\t\t\t<el-pagination background layout=\"->,prev, pager, next\" :page-size=\"pageSize\" :total=\"iconTotal\" @current-change=\"currentPageChange\"></el-pagination>\n\n\t\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t\t<el-button @click=\"IconModalVisible = false\">取 消</el-button>\n\t\t\t\t\t<el-button type=\"primary\" @click=\"UpdateIconHandle\">确 定</el-button>\n\t\t\t\t</div>\n\t\t\t</el-dialog>\n\t\t\t<!-- 添加Modal -->\n\t\t\t<el-dialog title=\"添加节点\" :visible.sync=\"AddModalVisible\">\n\t\t\t\t<el-form label-width=\"80px\" :label-position=\"'left'\">\n\t\t\t\t\t<el-form-item label=\"菜单名称\">\n\t\t\t\t\t\t<el-input v-model=\"addForm.name\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"链接地址\">\n\t\t\t\t\t\t<el-input v-model=\"addForm.path\" placeholder=\"指定此菜单的链接地址，选填\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t\t<el-form-item label=\"显示顺序\">\n\t\t\t\t\t\t<el-input v-model=\"addForm.order\" placeholder=\"显示顺序按照数字从小到大，如2001\"></el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t</el-form>\n\t\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t\t<el-button @click=\"AddModalVisible = false\">取 消</el-button>\n\t\t\t\t\t<el-button type=\"primary\" @click=\"AddNodeHandle\">确 定</el-button>\n\t\t\t\t</div>\n\t\t\t</el-dialog>\n\t\t</el-card>\n\t</div>\n</template>\n\n<script>\n\timport { Menu, Icon } from \"@/api/index\";\n\n\texport default {\n\t\tname: \"Menu\",\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tdefaultProps: {\n\t\t\t\t\tlabel: 'name'\n\t\t\t\t},\n\t\t\t\t// 选择图标\n\t\t\t\tIconModalVisible: false,\n\t\t\t\ticons: [],\n\t\t\t\tpageSize: 30,\n\t\t\t\ticonTotal: 0,\n\t\t\t\tcheckedIcon: '',\n\t\t\t\tcheckedIconName: '',\n\t\t\t\t// 编辑Modal\n\t\t\t\tEditModalVisible: false,\n\t\t\t\teditForm: {\n\t\t\t\t\tname: \"\",\n\t\t\t\t\tpId: '',\n\t\t\t\t\tpath: '',\n\t\t\t\t\torder: '',\n\t\t\t\t},\n\t\t\t\t// 添加Modal\n\t\t\t\tAddModalVisible: false,\n\t\t\t\taddForm: {\n\t\t\t\t\tname: \"\",\n\t\t\t\t\tpId: '',\n\t\t\t\t\tpath: '',\n\t\t\t\t\torder: '',\n\t\t\t\t},\n\t\t\t\tcurrentNodeData: '',\n\t\t\t\tcurrentNode: '',\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tthis.loadIcons(1);\n\t\t},\n\t\tmethods: {\n\t\t\tasync loadNode(node, resolve) {\n\t\t\t\t// 根节点level==0\n\t\t\t\tif (node.level === 0) {\n\t\t\t\t\tlet { data } = await Menu.loadSub({ pId: 0 });\n\t\t\t\t\treturn resolve(data);\n\t\t\t\t}\n\t\t\t\tlet { data } = await Menu.loadSub({ pId: node.data.id });\n\t\t\t\tresolve(data);\n\t\t\t},\n\t\t\t// 加载element图标\n\t\t\tasync loadIcons(pageIndex) {\n\t\t\t\tlet { status, icons, total } = await Icon.list({ pageSize: this.pageSize, pageIndex });\n\t\t\t\tif (status) {\n\t\t\t\t\ticons.forEach((item) => {\n\t\t\t\t\t\t// 添加选择状态--布尔值\n\t\t\t\t\t\titem.checked = false;\n\t\t\t\t\t});\n\t\t\t\t\tthis.icons = icons;\n\t\t\t\t\tthis.iconTotal = total;\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 打开图标选择Modal\n\t\t\topenIconModal(node, data) {\n\t\t\t\tthis.IconModalVisible = true;\n\t\t\t\t// 转存data\n\t\t\t\tthis.currentNodeData = data;\n\t\t\t},\n\t\t\t// 分页器改变页码数\n\t\t\tcurrentPageChange(pageIndex) {\n\t\t\t\tthis.loadIcons(pageIndex);\n\t\t\t},\n\t\t\t// 选中图标\n\t\t\tcheckIcon(data) {\n\t\t\t\tthis.icons.forEach((item) => {\n\t\t\t\t\t// 切换选中状态\n\t\t\t\t\titem.checked = item == data ? !data.checked : false;\n\t\t\t\t});\n\t\t\t\t// 存储/取消选中的iconName\n\t\t\t\tthis.checkedIcon = data.checked ? data.id : '';\n\t\t\t\tthis.checkedIconName = data.checked ? data.name : '';\n\t\t\t},\n\t\t\t// 更新图标\n\t\t\tasync UpdateIconHandle() {\n\t\t\t\tlet { status, msg } = await Menu.setIcon({ id: this.currentNodeData.id, icon: this.checkedIcon });\n\t\t\t\tif (status) {\n\t\t\t\t\tthis.$message.success(msg);\n\t\t\t\t\tthis.IconModalVisible = false;\n\t\t\t\t\t// 修改图标\n\t\t\t\t\tthis.currentNodeData.icon = this.checkedIconName;\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 打开编辑Modal\n\t\t\topenEditModal(node, data) {\n\t\t\t\tthis.EditModalVisible = true;\n\t\t\t\tthis.editForm = { ...data };\n\t\t\t\t// 转存node节点\n\t\t\t\tthis.currentNode = node;\n\t\t\t},\n\t\t\t// 打开添加Modal获取pId\n\t\t\topenAddModal(node, data) {\n\t\t\t\tthis.addForm.pId = data.id;\n\t\t\t\tthis.AddModalVisible = true;\n\t\t\t\t// 转存data\n\t\t\t\tthis.currentNode = node;\n\t\t\t},\n\t\t\t// 删除节点\n\t\t\topenDeleteModal(node, data) {\n\t\t\t\tthis.$confirm('此操作将永久删除该菜单, 是否继续?', {\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t})\n\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\tlet { status } = await Menu.remove({ id: data.id });\n\t\t\t\t\t\tif (status) {\n\t\t\t\t\t\t\tnode.remove();\n\t\t\t\t\t\t\tthis.$message.success('删除成功!');\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tthis.$message.info('已取消删除');\n\t\t\t\t\t});\n\t\t\t},\n\t\t\t// 确认添加节点\n\t\t\tasync AddNodeHandle() {\n\t\t\t\tlet { status, msg, data } = await Menu.add({ ...this.addForm });\n\t\t\t\tif (!status) {\n\t\t\t\t\tthis.$message.error(msg);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.$message.success(msg);\n\t\t\t\tthis.AddModalVisible = false;\n\t\t\t\t// 树形结构添加子节点\n\t\t\t\tthis.$refs.tree.append({ ...this.addForm, ...data }, this.currentNode);\n\t\t\t\t//清空表单\n\t\t\t\tthis.addForm = { name: \"\", pId: '', path: '' };\n\t\t\t},\n\t\t\t// 更新节点\n\t\t\tasync UpdateNodeHandle() {\n\t\t\t\tlet { status, msg } = await Menu.update({ ...this.editForm });\n\t\t\t\tif (status) {\n\t\t\t\t\tthis.$message.success(msg);\n\t\t\t\t\tthis.EditModalVisible = false;\n\t\t\t\t\t// 更新节点\n\t\t\t\t\tthis.currentNode.data = { ...this.editForm }\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.node-box {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tfont-size: 14px;\n\n\t\t.node-order {\n\t\t\twidth: 100px;\n\t\t\tdisplay: inline-block;\n\t\t\tfont-size: 12px;\n\t\t}\n\t}\n\n\tul.icon-list {\n\t\toverflow: hidden;\n\t\tlist-style: none;\n\t\tpadding: 0 !important;\n\t\tborder: solid 1px #eaeefb;\n\t\tborder-radius: 4px;\n\t}\n\n\t.icon-list li {\n\t\tfloat: left;\n\t\twidth: 10%;\n\t\ttext-align: center;\n\t\theight: 100px;\n\t\tline-height: 100px;\n\t\tcolor: #666;\n\t\tfont-size: 10px;\n\t\tborder-right: 1px solid #eee;\n\t\tborder-bottom: 1px solid #eee;\n\t\tmargin-right: -1px;\n\t\tmargin-bottom: -1px;\n\n\t\t&::after {\n\t\t\tdisplay: inline-block;\n\t\t\tcontent: \"\";\n\t\t\theight: 100%;\n\t\t\tvertical-align: middle;\n\t\t}\n\n\t\tspan {\n\t\t\tdisplay: inline-block;\n\t\t\tline-height: normal;\n\t\t\tvertical-align: middle;\n\t\t\tfont-family: \"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\",\n\t\t\t\t\"Microsoft YaHei\", SimSun, sans-serif;\n\t\t\tcolor: #99a9bf;\n\t\t\ttransition: color 0.15s linear;\n\t\t}\n\n\t\ti {\n\t\t\tdisplay: block;\n\t\t\tfont-size: 26px;\n\t\t\tmargin-bottom: 15px;\n\t\t\tcolor: #606266;\n\t\t\ttransition: color 0.15s linear;\n\t\t}\n\n\t\t.icon-name {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 0 3px;\n\t\t\theight: 1em;\n\t\t}\n\n\t\t&.checked,\n\t\t&.checked:hover {\n\t\t\tbackground-color: rgb(92, 182, 255);\n\n\t\t\tspan,\n\t\t\ti {\n\t\t\t\tcolor: white;\n\t\t\t}\n\t\t}\n\n\t\t&:hover {\n\n\t\t\tspan,\n\t\t\ti {\n\t\t\t\tcolor: rgb(92, 182, 255);\n\t\t\t}\n\t\t}\n\t}\n</style>\n"]}]}